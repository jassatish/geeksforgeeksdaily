#User function Template for python3

def count_distint_subsequence(s):
    n = len(s)
    mod = 10**9 + 7
    dp = [0] * (n+1)
    dp[0] = 1
    
    last_occur = {}
    
for i in range (1, n + 1):
        dp[i] = (2*dp[i-1]) % mod
if s[i-1] in last_occur:
            dp[i] -= dp[last_occur[s[i-1]] - 1]
        last_occur[s[i-1]] = i
    
    return dp[n]
    

class Solution:
def betterString(self, str1, str2):
        # Code here
if count_distint_subsequence(str1) >= count_distint_subsequence(str2):
            return str1
        else:
            return str2
        
            
        
        
