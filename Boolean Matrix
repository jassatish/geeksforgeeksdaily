#User function Template for python3


#Function to modify the matrix such that if a matrix cell matrix[i][j]
#is 1 then all the cells in its ith row and jth column will become 1.
def booleanMatrix(matrix):
    R, C = len(matrix), len(matrix[0])
    
    # Variables to track if the first row and first column need to be updated
    row_has_one = False
    col_has_one = False

    # Check the first row for 1
for j in range(C):
if matrix[0][j] == 1:
            row_has_one = True
            break

Check the first column for 1
for i in range(R):
if matrix[i][0] == 1:
            col_has_one = True
            break

Use the first row and first column as markers to identify which rows and columns to update
for i in range (1, R):
for j in range(1, C):
if matrix[i][j] == 1:
                matrix[i][0] = 1
                matrix[0][j] = 1

    # Update the rows
for i in range (1, R):
if matrix[i][0] == 1:
for j in range(1, C):
                matrix[i][j] = 1

    # Update the columns
for j in range (1, C):
if matrix[0][j] == 1:
for i in range(1, R):
                matrix[i][j] = 1

Update the first row and first column if necessary
    if row_has_one:
for j in range(C):
            matrix[0][j] = 1
    if col_has_one:
for i in range(R):
            matrix[i][0] = 1

