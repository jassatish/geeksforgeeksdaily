#User function Template for python3

class Solution:
def palindromicPartition(self, string):
        # code here
        n = len(string)
        dp = [float('inf')] * n
        is_palindrome_matrix = [[False] * n for _ in range(n)]
for end in range(n):
for start in range(end + 1):
if string[start] == string[end] and (end - start <= 2 or is_palindrome_matrix[start + 1][end - 1]):
                    is_palindrome_matrix[start][end] = True

for i in range(n):
            if is_palindrome_matrix[0][i]:
                dp[i] = 0
            else:
for j in range(i):
if is_palindrome_matrix[j + 1][i]:
                        dp[i] = min(dp[i], dp[j] + 1)

        return dp[n - 1]

